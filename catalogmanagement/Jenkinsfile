pipeline {
    agent any 
    tools {
        maven "M3"
    }
    environment {
        registryCredential = 'dockerhub'
        DOCKER_REGISTRY_URL = 'http://hub.docker.com'
        DOCKER_REGISTRY_CREDENTIALS_ID = 'dockerhub'
        DOCKER_REPO = 'ravinderdabgotra'
        IMAGE_NAME = 'catalogmanagement'
        IMAGE_TAG = '1.0'
    }
    stages {
        stage('Compile and Clean') { 
            steps {
                // Run Maven on a Unix agent.
              
                sh "mvn -f catalogmanagement/ clean compile"
            }
        }
        stage('deploy') { 
            
            steps {
                sh "mvn -f catalogmanagement/ package"
                sh "ls /var/lib/jenkins/workspace/catalogmanagementpipeline/catalogmanagement/target/"
            }
        }
        stage('Build Docker image'){
          
            steps {
                // echo "Hello Java Express"
                // sh 'ls'
                // sh 'docker build -f catalogmanagement/Dockerfile -t ravinderdabgotra/catalogmanagement:${BUILD_NUMBER} .'
                // script {
                //     def dockerImage = docker.build("${DOCKER_REGISTRY_URL}/${DOCKER_REPO}/${IMAGE_NAME}:${IMAGE_TAG}", "-f Dockerfile .")
                //     dockerImage.push()
                // }
                script {
                withCredentials([usernamePassword(credentialsId: "${DOCKER_REGISTRY_CREDENTIALS_ID}", passwordVariable: 'DOCKER_PASSWORD', usernameVariable: 'DOCKER_USERNAME')]) {
                    def dockerImage = docker.build("${DOCKER_REGISTRY_URL}/${DOCKER_REPO}/${IMAGE_NAME}:${IMAGE_TAG}", "-f Dockerfile .")
                    docker.withRegistry("${DOCKER_REGISTRY_URL}", "${DOCKER_USERNAME}", "${DOCKER_PASSWORD}") {
                        dockerImage.push()
                    }
                }
            }
        }
        
        stage('Docker deploy'){
            steps {
               
                sh 'docker run -itd -p  18080:18080 ravinderkumard/catalogmanagement:${BUILD_NUMBER}'
            }
        }
        stage('Archving') { 
            steps {
                 archiveArtifacts '**/target/*.jar'
            }
        }
    }
}
